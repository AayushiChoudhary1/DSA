  bool DFS(vector<int>adj[], vector<bool>&visited, vector<bool>&path, int node)
  {
      visited[node]=1;
      path[node]=1;
      
      for(int i=0; i<adj[node].size(); i++)
      {
          if(visited[adj[node][i]]==0)
          {
              if(DFS(adj, visited, path, adj[node][i]))
              return 1;
          }
          else
          {
              if(path[adj[node][i]])
              return 1;
          }
      }
      
      path[node]=0;
      return 0;
  }
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        //visited
        vector<bool>visit(V,0);
        //path
        vector<bool>path(V,0);
        
        for(int i=0; i<V; i++)
        {
            if(!visit[i]){
                if(!visit[i])
                {
                    if(DFS(adj,visit,path,i))
                    return 1;
                }
            }
        }
        return 0;
    }
};
