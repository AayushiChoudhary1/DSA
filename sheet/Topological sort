	void DFS(vector<int>adj[], stack<int>&s, vector<bool>&visit, int node)
	{
	    visit[node]=1;
	    for(int i=0; i<adj[node].size();i++)
	    {
	        if(!visit[adj[node][i]])
	        {
	            DFS(adj,s,visit,adj[node][i]);
	        }
	    }
	    
	    s.push(node);
	    return;
	}
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    stack<int>s;
	    vector<bool>visit(V,0);
	    for(int i=0; i<V; i++)
	    {
	        if(!visit[i])
	        DFS(adj,s,visit,i);
	    }
	    
	    vector<int>ans;
	    while(!s.empty())
	    {
	        ans.push_back(s.top());
	        s.pop();
	    }
	    
	    return ans;
	}
