
[            1                from line number 19 add 1 in queue. now q is not empty so, calcuate size and store q first i.e 1 in ans.
            / \               not add 1 ka left and right in q [2 3] and 1 pop from q.  so, again come in line no 21, then again calculate size of q and same process repeat.
          2    3
              / \
             4   5
            / \
           6   7



vector<int> leftView(Node *root)
{
   vector <int> ans;
   if(!root)
   return ans;
   
   queue <Node *> q;
   q.push(root);
   
   while(!q.empty())
   {
       int size = q.size();
       ans.push_back(q.front()->data);
       
       while(size--)
       {
           Node *temp = q.front();   ---------------------------store queue first element in temp and the pop after push temp left and right element in queue
           q.pop();
           
           if(temp -> left)
           {
               q.push(temp->left);
           }
           
           if(temp -> right)
           {
               q.push(temp->right);
           }
       }
   }
   
   return ans;
}
